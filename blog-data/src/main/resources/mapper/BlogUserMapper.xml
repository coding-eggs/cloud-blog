<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cloud.blog.data.mapper.BlogUserMapper">
  <resultMap id="BaseResultMap" type="com.cloud.blog.data.model.po.BlogUser">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="identify_type" jdbcType="INTEGER" property="identifyType" />
    <result column="credential" jdbcType="VARCHAR" property="credential" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="figure_url" jdbcType="VARCHAR" property="figureUrl" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="mail" jdbcType="VARCHAR" property="mail" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="last_password_reset_time" jdbcType="TIMESTAMP" property="lastPasswordResetTime" />
    <result column="locked" jdbcType="TINYINT" property="locked" />
    <result column="deleted" jdbcType="TINYINT" property="deleted" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, identify_type, credential, nickname, birthday, figure_url, sex, phone, 
    mail, last_login_time, create_time, modify_time, last_password_reset_time, locked, 
    deleted
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blog_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectUserByUsername" resultType="com.cloud.blog.auth.config.base.BaseSecurityUser">
    select
      id,
      username,
      identify_type,
      credential,
      nickname,
      birthday,
      figure_url,
      sex,
      phone,
      mail,
      last_login_time,
      create_time,
      modify_time,
      last_password_reset_time,
      locked,
      deleted
    from blog_user
    where deleted = 0
      and locked = 0
      and username = #{username,jdbcType=VARCHAR}
  </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from blog_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.cloud.blog.data.model.po.BlogUser" useGeneratedKeys="true">
    insert into blog_user (username, identify_type, credential, 
      nickname, birthday, figure_url, 
      sex, phone, mail, last_login_time, 
      create_time, modify_time, last_password_reset_time, 
      locked, deleted)
    values (#{username,jdbcType=VARCHAR}, #{identifyType,jdbcType=INTEGER}, #{credential,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{birthday,jdbcType=TIMESTAMP}, #{figureUrl,jdbcType=VARCHAR}, 
      #{sex,jdbcType=TINYINT}, #{phone,jdbcType=VARCHAR}, #{mail,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, #{lastPasswordResetTime,jdbcType=TIMESTAMP}, 
      #{locked,jdbcType=TINYINT}, #{deleted,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.cloud.blog.data.model.po.BlogUser" useGeneratedKeys="true">
    insert into blog_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="identifyType != null">
        identify_type,
      </if>
      <if test="credential != null">
        credential,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="figureUrl != null">
        figure_url,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="mail != null">
        mail,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="lastPasswordResetTime != null">
        last_password_reset_time,
      </if>
      <if test="locked != null">
        locked,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="identifyType != null">
        #{identifyType,jdbcType=INTEGER},
      </if>
      <if test="credential != null">
        #{credential,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="figureUrl != null">
        #{figureUrl,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastPasswordResetTime != null">
        #{lastPasswordResetTime,jdbcType=TIMESTAMP},
      </if>
      <if test="locked != null">
        #{locked,jdbcType=TINYINT},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cloud.blog.data.model.po.BlogUser">
    update blog_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="identifyType != null">
        identify_type = #{identifyType,jdbcType=INTEGER},
      </if>
      <if test="credential != null">
        credential = #{credential,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="figureUrl != null">
        figure_url = #{figureUrl,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        mail = #{mail,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastPasswordResetTime != null">
        last_password_reset_time = #{lastPasswordResetTime,jdbcType=TIMESTAMP},
      </if>
      <if test="locked != null">
        locked = #{locked,jdbcType=TINYINT},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cloud.blog.data.model.po.BlogUser">
    update blog_user
    set username = #{username,jdbcType=VARCHAR},
      identify_type = #{identifyType,jdbcType=INTEGER},
      credential = #{credential,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      figure_url = #{figureUrl,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      phone = #{phone,jdbcType=VARCHAR},
      mail = #{mail,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      last_password_reset_time = #{lastPasswordResetTime,jdbcType=TIMESTAMP},
      locked = #{locked,jdbcType=TINYINT},
      deleted = #{deleted,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>