management:
  endpoints:
    web:
      exposure:
        include: '*'
server:
  port: 9999
spring:
  security:
    user:
      name: coding
      password: coding
  rabbitmq:
    host: 182.61.43.146
    port: 5672
    username: admin
    password: admin
    virtual-host: my_vhost
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
        namespace: dev
        group: blog
    config:
      server:
        git:
          # 默认分支
          default-label: master
          # 仓库地址
          uri: https://github.com/coding-eggs/blog-config.git
          # 子路径
          search-paths: auth
          username: 2665151959@qq.com
          password: Ws961226
          # 启动加载
#          clone-on-start: true
    stream:
      default-binder: rabbit
      binders:
        rabbit:
          type: rabbit
          environment:
            spring:
              rabbitmq:
                host: 182.61.43.146
                port: 5672
                username: admin
                password: admin
                virtual-host: my_vhost
      bindings:
        input:
          # 该参数用来设置绑定通道组，该参数主要作用于输入通道，保证同一消息组中得消息只有一个消费实例接受和处理
#          group: null
          destination: config.messages
          binder: rabbit
          content-type: application/json
          consumer:
            # 输入通道消费者得并发数
            concurrency: 1
            # 来自消费生产者得数据是否采用了分区
            partitioned: false
            # 当设置为raw 得时候将禁用对消息头得解析，当该属性只有在使用不支持消息头功能得中间件时有效，因为Spring Cloud Stream
            # 默认会解析嵌入得头部信息
            headerMode: embeddedHeaders
            # 对输入通道消息处理得最大重试次数
            maxAttempts: 3
            # 重试消息处理得初始间隔时间
            backOffInitialInterval: 1000
            # 重试消息处理得最大时间间隔
            backOffMaxInterval: 10000
            # 重试消息处理时间间隔得
            backOffMultiplier: 2.0
            # 该参数用来设置绑定通道的消息类型
        output:
          destination: condig.messages
          binder: rabbit
          # producer:
            # 生产者 通过该参数指定了分区键得表达式规则，我们可以根据实际得输出消息规则配置spEL来生成合适得分区键
            #partitionKeyExpression: null
            # 该参数用来配置分区键提取策略接口PartitionKeyExtractorStrategy 得实现。当设置该属性后，将对当前绑定通道得
            # 输出数据进行分区处理。同时，partitionCount 参数必须大于1 才能生效。该参数与partitionKeyExpression 互斥，不能同时设置
            #partitionKeyExtractorClass: null
            # 该参数指定了消息分区得数量
            #partitionCount: 1
            # 该参数用来配置分区键提取策略接口PartitionKeyExtractorStrategy 得实现。该参数与partitionKeyExpression 互斥
            # 如果两者都不设置，那么分区计算规则为 hashCode(key) % partitionCount,这里得key根据partitionKeyExpression 或 partitionKeyExtractorClass 的配置计算得到
            #partitionSelectorClass: null
            # 该参数用来配置自定义分区选择器的SpEL表达式。 与  partitionSelectorClass 互斥，如果两者都不设置，那么分区计算规则为 hashCode(key) % partitionCount,这里得key根据partitionKeyExpression 或 partitionKeyExtractorClass 的配置计算得到
            #partitionSelectorExpression: null
